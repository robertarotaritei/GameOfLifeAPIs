ç)
[D:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Controllers\GameHistoryController.cs
	namespace 	
GameHistoryAPI
 
. 
Controllers $
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 !
)		! "
]		" #
public

 

class

 !
GameHistoryController

 &
{ 
public 
IHistoryQuery 
_historyQuery *
{+ ,
get- 0
;0 1
}2 3
public !
GameHistoryController $
($ %
IHistoryQuery% 2
historyQuery3 ?
)? @
{ 	
_historyQuery 
= 
historyQuery (
;( )
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAll) /
(/ 0
)0 1
{ 	
var 
result 
= 
await 
_historyQuery ,
., -
AllAsync- 5
(5 6
)6 7
;7 8
if 
( 
result 
. 
Count 
== 
$num  !
)! "
return 
new 
NotFoundResult )
() *
)* +
;+ ,
return 
new 
OkObjectResult %
(% &
result& ,
), -
;- .
} 	
[   	
HttpGet  	 
(   
$str   
)   
]   
public!! 
async!! 
Task!! 
<!! 
IActionResult!! '
>!!' (
GetOne!!) /
(!!/ 0
int!!0 3
id!!4 6
)!!6 7
{"" 	
var## 
result## 
=## 
await## 
_historyQuery## ,
.##, -
FindOneAsync##- 9
(##9 :
id##: <
)##< =
;##= >
if%% 
(%% 
result%% 
is%% 
null%% 
)%% 
return&& 
new&& 
NotFoundResult&& )
(&&) *
)&&* +
;&&+ ,
return(( 
new(( 
OkObjectResult(( %
(((% &
result((& ,
)((, -
;((- .
})) 	
[,, 	
HttpPost,,	 
],, 
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (
Post--) -
(--- .
[--. /
FromBody--/ 7
]--7 8
Game--9 =
body--> B
)--B C
{.. 	
var// 
result// 
=// 
await// 
_historyQuery// ,
.//, -
InsertAsync//- 8
(//8 9
body//9 =
)//= >
;//> ?
if11 
(11 
result11 
is11 
null11 
)11 
return22 
new22 
NotFoundResult22 )
(22) *
)22* +
;22+ ,
return44 
new44 
OkObjectResult44 %
(44% &
body44& *
)44* +
;44+ ,
}55 	
[88 	
HttpPut88	 
(88 
$str88 
)88 
]88 
public99 
async99 
Task99 
<99 
IActionResult99 '
>99' (
PutOne99) /
(99/ 0
int990 3
id994 6
,996 7
[998 9
FromBody999 A
]99A B
Game99C G
body99H L
)99L M
{:: 	
var;; 
result;; 
=;; 
await;; 
_historyQuery;; ,
.;;, -
UpdateAsync;;- 8
(;;8 9
id;;9 ;
,;;; <
body;;= A
);;A B
;;;B C
if== 
(== 
result== 
is== 
null== 
)== 
return>> 
new>> 
NotFoundResult>> )
(>>) *
)>>* +
;>>+ ,
return@@ 
new@@ 
OkObjectResult@@ %
(@@% &
result@@& ,
)@@, -
;@@- .
}AA 	
[DD 	

HttpDeleteDD	 
(DD 
$strDD 
)DD 
]DD 
publicEE 
asyncEE 
TaskEE 
<EE 
IActionResultEE '
>EE' (
	DeleteOneEE) 2
(EE2 3
intEE3 6
idEE7 9
)EE9 :
{FF 	
varGG 
resultGG 
=GG 
awaitGG 
_historyQueryGG ,
.GG, -
DeleteAsyncGG- 8
(GG8 9
idGG9 ;
)GG; <
;GG< =
ifII 
(II 
resultII 
isII 
nullII 
)II 
returnJJ 
newJJ 
NotFoundResultJJ )
(JJ) *
)JJ* +
;JJ+ ,
returnLL 
newLL 
OkObjectResultLL %
(LL% &
resultLL& ,
)LL, -
;LL- .
}MM 	
}OO 
}PP ©
ND:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\AppDb.cs
	namespace 	
GameHistoryAPI
 
{ 
public 

class 
AppDb 
: 
IDisposable $
{ 
public 
MySqlConnection 

Connection )
{* +
get, /
;/ 0
}1 2
public

 
AppDb

 
(

 
string

 
connectionString

 ,
)

, -
{ 	

Connection 
= 
new 
MySqlConnection ,
(, -
connectionString- =
)= >
;> ?
} 	
public 
void 
Dispose 
( 
) 
=>  

Connection! +
.+ ,
Dispose, 3
(3 4
)4 5
;5 6
} 
} ˇX
UD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\HistoryQuery.cs
	namespace		 	
GameHistoryAPI		
 
.		 
Models		 
{

 
public 

class 
HistoryQuery 
: 
IHistoryQuery  -
{ 
public 
AppDb 
Db 
{ 
get 
; 
}  
public 
SqlStatement 
	Statement %
{& '
get( +
;+ ,
}- .
public 
HistoryQuery 
( 
string "
connectionString# 3
)3 4
{ 	
Db 
= 
new 
AppDb 
( 
connectionString +
)+ ,
;, -
	Statement 
= 
new 
SqlStatement (
(( )
)) *
;* +
} 	
public 
async 
Task 
< 
Game 
> 
InsertAsync  +
(+ ,
Game, 0
body1 5
)5 6
{ 	
await 
Db 
. 

Connection 
.  
	OpenAsync  )
() *
)* +
;+ ,
using 
var 
cmd 
= 
Db 
. 

Connection )
.) *
CreateCommand* 7
(7 8
)8 9
;9 :
cmd 
. 
CommandText 
= 
	Statement '
.' (
InsertAsync( 3
;3 4

BindParams 
( 
cmd 
, 
body  
.  !
Author! '
,' (
body) -
.- .
InitialState. :
): ;
;; <
await 
cmd 
.  
ExecuteNonQueryAsync *
(* +
)+ ,
;, -
body 
. 
Id 
= 
( 
int 
) 
cmd 
. 
LastInsertedId -
;- .
return   
body   
;   
}!! 	
public## 
async## 
Task## 
<## 
List## 
<## 
Game## #
>### $
>##$ %
AllAsync##& .
(##. /
)##/ 0
{$$ 	
await%% 
Db%% 
.%% 

Connection%% 
.%%  
	OpenAsync%%  )
(%%) *
)%%* +
;%%+ ,
using&& 
var&& 
cmd&& 
=&& 
Db&& 
.&& 

Connection&& )
.&&) *
CreateCommand&&* 7
(&&7 8
)&&8 9
;&&9 :
cmd'' 
.'' 
CommandText'' 
='' 
	Statement'' '
.''' (
AllAsync''( 0
;''0 1
return)) 
await)) 
ReadAllAsync)) %
())% &
await))& +
cmd)), /
.))/ 0
ExecuteReaderAsync))0 B
())B C
)))C D
)))D E
;))E F
}** 	
public,, 
async,, 
Task,, 
<,, 
Game,, 
>,, 
UpdateAsync,,  +
(,,+ ,
int,,, /
id,,0 2
,,,2 3
Game,,4 8
game,,9 =
),,= >
{-- 	
await.. 
Db.. 
... 

Connection.. 
...  
	OpenAsync..  )
(..) *
)..* +
;..+ ,
using// 
var// 
cmd// 
=// 
Db// 
.// 

Connection// )
.//) *
CreateCommand//* 7
(//7 8
)//8 9
;//9 :
cmd00 
.00 
CommandText00 
=00 
	Statement00 '
.00' (
UpdateAsync00( 3
;003 4

BindParams11 
(11 
cmd11 
,11 
game11  
.11  !
InitialState11! -
)11- .
;11. /
BindId22 
(22 
cmd22 
,22 
id22 
)22 
;22 
var33 
result33 
=33 
await33 
ReadAllAsync33 +
(33+ ,
await33, 1
cmd332 5
.335 6
ExecuteReaderAsync336 H
(33H I
)33I J
)33J K
;33K L
return55 
result55 
.55 
Count55 
>55  !
$num55" #
?55$ %
result55& ,
[55, -
$num55- .
]55. /
:550 1
null552 6
;556 7
}66 	
public88 
async88 
Task88 
<88 
Game88 
>88 
DeleteAsync88  +
(88+ ,
int88, /
id880 2
)882 3
{99 	
var:: 
body:: 
=:: 
await:: 
FindOneAsync:: )
(::) *
id::* ,
)::, -
;::- .
using;; 
var;; 
cmd;; 
=;; 
Db;; 
.;; 

Connection;; )
.;;) *
CreateCommand;;* 7
(;;7 8
);;8 9
;;;9 :
cmd<< 
.<< 
CommandText<< 
=<< 
	Statement<< '
.<<' (
DeleteAsync<<( 3
;<<3 4
BindId== 
(== 
cmd== 
,== 
id== 
)== 
;== 
await>> 
cmd>> 
.>>  
ExecuteNonQueryAsync>> *
(>>* +
)>>+ ,
;>>, -
return@@ 
body@@ 
;@@ 
}AA 	
publicCC 
asyncCC 
TaskCC 
<CC 
GameCC 
>CC 
FindOneAsyncCC  ,
(CC, -
intCC- 0
idCC1 3
)CC3 4
{DD 	
awaitEE 
DbEE 
.EE 

ConnectionEE 
.EE  
	OpenAsyncEE  )
(EE) *
)EE* +
;EE+ ,
usingFF 
varFF 
cmdFF 
=FF 
DbFF 
.FF 

ConnectionFF )
.FF) *
CreateCommandFF* 7
(FF7 8
)FF8 9
;FF9 :
cmdGG 
.GG 
CommandTextGG 
=GG 
	StatementGG '
.GG' (
FindOneAsyncGG( 4
;GG4 5
BindIdHH 
(HH 
cmdHH 
,HH 
idHH 
)HH 
;HH 
varII 
resultII 
=II 
awaitII 
ReadAllAsyncII +
(II+ ,
awaitII, 1
cmdII2 5
.II5 6
ExecuteReaderAsyncII6 H
(IIH I
)III J
)IIJ K
;IIK L
returnKK 
resultKK 
.KK 
CountKK 
>KK  !
$numKK" #
?KK$ %
resultKK& ,
[KK, -
$numKK- .
]KK. /
:KK0 1
nullKK2 6
;KK6 7
}LL 	
privateNN 
asyncNN 
TaskNN 
<NN 
ListNN 
<NN  
GameNN  $
>NN$ %
>NN% &
ReadAllAsyncNN' 3
(NN3 4
DbDataReaderNN4 @
readerNNA G
)NNG H
{OO 	
varPP 
gamesPP 
=PP 
newPP 
ListPP  
<PP  !
GamePP! %
>PP% &
(PP& '
)PP' (
;PP( )
usingQQ 
(QQ 
readerQQ 
)QQ 
{RR 
whileSS 
(SS 
awaitSS 
readerSS #
.SS# $
	ReadAsyncSS$ -
(SS- .
)SS. /
)SS/ 0
{TT 
varUU 
gameUU 
=UU 
newUU "
GameUU# '
(UU' (
)UU( )
{VV 
IdWW 
=WW 
readerWW #
.WW# $
GetInt32WW$ ,
(WW, -
$numWW- .
)WW. /
,WW/ 0
AuthorXX 
=XX  
readerXX! '
.XX' (
	GetStringXX( 1
(XX1 2
$numXX2 3
)XX3 4
,XX4 5
InitialStateYY $
=YY% &
readerYY' -
.YY- .
	GetStringYY. 7
(YY7 8
$numYY8 9
)YY9 :
,YY: ;
}ZZ 
;ZZ 
games[[ 
.[[ 
Add[[ 
([[ 
game[[ "
)[[" #
;[[# $
}\\ 
}]] 
return^^ 
games^^ 
;^^ 
}__ 	
privateaa 
voidaa 
BindIdaa 
(aa 
MySqlCommandaa (
cmdaa) ,
,aa, -
intaa. 1
idaa2 4
)aa4 5
{bb 	
cmdcc 
.cc 

Parameterscc 
.cc 
Addcc 
(cc 
newcc "
MySqlParametercc# 1
{dd 
ParameterNameee 
=ee 
$stree  %
,ee% &
DbTypeff 
=ff 
DbTypeff 
.ff  
Int32ff  %
,ff% &
Valuegg 
=gg 
idgg 
,gg 
}hh 
)hh 
;hh 
}ii 	
privatekk 
voidkk 

BindParamskk 
(kk  
MySqlCommandkk  ,
cmdkk- 0
,kk0 1
stringkk2 8
authorkk9 ?
,kk? @
stringkkA G
initialStatekkH T
)kkT U
{ll 	
cmdmm 
.mm 

Parametersmm 
.mm 
Addmm 
(mm 
newmm "
MySqlParametermm# 1
{nn 
ParameterNameoo 
=oo 
$stroo  )
,oo) *
DbTypepp 
=pp 
DbTypepp 
.pp  
Stringpp  &
,pp& '
Valueqq 
=qq 
authorqq 
,qq 
}rr 
)rr 
;rr 
cmdss 
.ss 

Parametersss 
.ss 
Addss 
(ss 
newss "
MySqlParameterss# 1
{tt 
ParameterNameuu 
=uu 
$struu  /
,uu/ 0
DbTypevv 
=vv 
DbTypevv 
.vv  
Stringvv  &
,vv& '
Valueww 
=ww 
initialStateww $
,ww$ %
}xx 
)xx 
;xx 
}yy 	
private{{ 
void{{ 

BindParams{{ 
({{  
MySqlCommand{{  ,
cmd{{- 0
,{{0 1
string{{2 8
initialState{{9 E
){{E F
{|| 	
cmd}} 
.}} 

Parameters}} 
.}} 
Add}} 
(}} 
new}} "
MySqlParameter}}# 1
{~~ 
ParameterName 
= 
$str  /
,/ 0
DbType
ÄÄ 
=
ÄÄ 
DbType
ÄÄ 
.
ÄÄ  
String
ÄÄ  &
,
ÄÄ& '
Value
ÅÅ 
=
ÅÅ 
initialState
ÅÅ $
,
ÅÅ$ %
}
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
}
ÑÑ 
}ÖÖ ¬	
VD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\IHistoryQuery.cs
	namespace 	
GameHistoryAPI
 
. 
Infrastructure '
{		 
public

 

	interface

 
IHistoryQuery

 "
{ 
Task 
< 
Game 
> 
InsertAsync 
( 
Game #
body$ (
)( )
;) *
Task 
< 
Game 
> 
UpdateAsync 
( 
int "
id# %
,% &
Game' +
body, 0
)0 1
;1 2
Task 
< 
Game 
> 
DeleteAsync 
( 
int "
id# %
)% &
;& '
Task 
< 
Game 
> 
FindOneAsync 
(  
int  #
id$ &
)& '
;' (
Task 
< 
List 
< 
Game 
> 
> 
AllAsync !
(! "
)" #
;# $
} 
} ˙

UD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\SqlStatement.cs
	namespace 	
GameHistoryAPI
 
. 
Infrastructure '
{ 
public 

class 
SqlStatement 
{		 
public

 
string

 
InsertAsync

 !
{

" #
get

$ '
;

' (
}

) *
public 
string 
UpdateAsync !
{" #
get$ '
;' (
}) *
public 
string 
DeleteAsync !
{" #
get$ '
;' (
}) *
public 
string 
FindOneAsync "
{# $
get% (
;( )
}* +
public 
string 
AllAsync 
{  
get! $
;$ %
}& '
public 
SqlStatement 
( 
) 
{ 	
InsertAsync 
= 
$str t
;t u
UpdateAsync 
= 
$str m
;m n
DeleteAsync 
= 
$str N
;N O
FindOneAsync 
= 
$str P
;P Q
AllAsync 
= 
$str 6
;6 7
} 	
} 
} ª
ED:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Models\Game.cs
	namespace 	
GameHistoryAPI
 
. 
Models 
{ 
public		 

class		 
Game		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Author 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
InitialState "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
Game 
( 
) 
{ 	
} 	
} 
} ù

AD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Program.cs
	namespace

 	
GameHistoryAPI


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ó
AD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Startup.cs
	namespace 	
GameHistoryAPI
 
{ 
public 

class 
Startup 
{ 
readonly 
string "
MyAllowSpecificOrigins .
=/ 0
$str1 J
;J K
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services   
.   
AddCors   
(   
options   $
=>  % '
{!! 
options"" 
."" 
	AddPolicy"" !
(""! "
name""" &
:""& '"
MyAllowSpecificOrigins""( >
,""> ?
builder##" )
=>##* ,
{$$" #
builder%%& -
.%%- .
WithOrigins%%. 9
(%%9 :
$str%%: Q
)%%Q R
;%%R S
}&&" #
)&&# $
;&&$ %
}'' 
)'' 
;'' 
services(( 
.(( 
AddControllers(( #
(((# $
)(($ %
;((% &
services)) 
.)) 
AddTransient)) !
<))! "
IHistoryQuery))" /
,))/ 0
HistoryQuery))1 =
>))= >
())> ?
_))? @
=>))A C
new))D G
HistoryQuery))H T
())T U
Configuration))U b
[))b c
$str	))c à
]
))à â
)
))â ä
)
))ä ã
;
))ã å
}** 	
public-- 
void-- 
	Configure-- 
(-- 
IApplicationBuilder-- 1
app--2 5
,--5 6
IWebHostEnvironment--7 J
env--K N
)--N O
{.. 	
if// 
(// 
env// 
.// 
IsDevelopment// !
(//! "
)//" #
)//# $
{00 
app11 
.11 %
UseDeveloperExceptionPage11 -
(11- .
)11. /
;11/ 0
}22 
app44 
.44 
UseHttpsRedirection44 #
(44# $
)44$ %
;44% &
app66 
.66 

UseRouting66 
(66 
)66 
;66 
app88 
.88 
UseCors88 
(88 "
MyAllowSpecificOrigins88 .
)88. /
;88/ 0
app:: 
.:: 
UseAuthorization::  
(::  !
)::! "
;::" #
app<< 
.<< 
UseEndpoints<< 
(<< 
	endpoints<< &
=><<' )
{== 
	endpoints>> 
.>> 
MapControllers>> (
(>>( )
)>>) *
;>>* +
}?? 
)?? 
;?? 
}@@ 	
}AA 
}BB 