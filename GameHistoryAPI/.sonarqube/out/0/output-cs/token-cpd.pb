ç)
[D:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Controllers\GameHistoryController.cs
	namespace 	
GameHistoryAPI
 
. 
Controllers $
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 !
)		! "
]		" #
public

 

class

 !
GameHistoryController

 &
{ 
public 
IHistoryQuery 
_historyQuery *
{+ ,
get- 0
;0 1
}2 3
public !
GameHistoryController $
($ %
IHistoryQuery% 2
historyQuery3 ?
)? @
{ 	
_historyQuery 
= 
historyQuery (
;( )
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAll) /
(/ 0
)0 1
{ 	
var 
result 
= 
await 
_historyQuery ,
., -
AllAsync- 5
(5 6
)6 7
;7 8
if 
( 
result 
. 
Count 
== 
$num  !
)! "
return 
new 
NotFoundResult )
() *
)* +
;+ ,
return 
new 
OkObjectResult %
(% &
result& ,
), -
;- .
} 	
[   	
HttpGet  	 
(   
$str   
)   
]   
public!! 
async!! 
Task!! 
<!! 
IActionResult!! '
>!!' (
GetOne!!) /
(!!/ 0
int!!0 3
id!!4 6
)!!6 7
{"" 	
var## 
result## 
=## 
await## 
_historyQuery## ,
.##, -
FindOneAsync##- 9
(##9 :
id##: <
)##< =
;##= >
if%% 
(%% 
result%% 
is%% 
null%% 
)%% 
return&& 
new&& 
NotFoundResult&& )
(&&) *
)&&* +
;&&+ ,
return(( 
new(( 
OkObjectResult(( %
(((% &
result((& ,
)((, -
;((- .
})) 	
[,, 	
HttpPost,,	 
],, 
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (
Post--) -
(--- .
[--. /
FromBody--/ 7
]--7 8
Game--9 =
body--> B
)--B C
{.. 	
var// 
result// 
=// 
await// 
_historyQuery// ,
.//, -
InsertAsync//- 8
(//8 9
body//9 =
)//= >
;//> ?
if11 
(11 
result11 
is11 
null11 
)11 
return22 
new22 
NotFoundResult22 )
(22) *
)22* +
;22+ ,
return44 
new44 
OkObjectResult44 %
(44% &
body44& *
)44* +
;44+ ,
}55 	
[88 	
HttpPut88	 
(88 
$str88 
)88 
]88 
public99 
async99 
Task99 
<99 
IActionResult99 '
>99' (
PutOne99) /
(99/ 0
int990 3
id994 6
,996 7
[998 9
FromBody999 A
]99A B
Game99C G
body99H L
)99L M
{:: 	
var;; 
result;; 
=;; 
await;; 
_historyQuery;; ,
.;;, -
UpdateAsync;;- 8
(;;8 9
id;;9 ;
,;;; <
body;;= A
);;A B
;;;B C
if== 
(== 
result== 
is== 
null== 
)== 
return>> 
new>> 
NotFoundResult>> )
(>>) *
)>>* +
;>>+ ,
return@@ 
new@@ 
OkObjectResult@@ %
(@@% &
result@@& ,
)@@, -
;@@- .
}AA 	
[DD 	

HttpDeleteDD	 
(DD 
$strDD 
)DD 
]DD 
publicEE 
asyncEE 
TaskEE 
<EE 
IActionResultEE '
>EE' (
	DeleteOneEE) 2
(EE2 3
intEE3 6
idEE7 9
)EE9 :
{FF 	
varGG 
resultGG 
=GG 
awaitGG 
_historyQueryGG ,
.GG, -
DeleteAsyncGG- 8
(GG8 9
idGG9 ;
)GG; <
;GG< =
ifII 
(II 
resultII 
isII 
nullII 
)II 
returnJJ 
newJJ 
NotFoundResultJJ )
(JJ) *
)JJ* +
;JJ+ ,
returnLL 
newLL 
OkObjectResultLL %
(LL% &
resultLL& ,
)LL, -
;LL- .
}MM 	
}OO 
}PP «
ND:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\AppDb.cs
	namespace 	
GameHistoryAPI
 
{ 
public 

sealed 
class 
AppDb 
: 
IDisposable  +
{ 
public 
MySqlConnection 

Connection )
{* +
get, /
;/ 0
}1 2
public

 
AppDb

 
(

 
string

 
connectionString

 ,
)

, -
{ 	

Connection 
= 
new 
MySqlConnection ,
(, -
connectionString- =
)= >
;> ?
} 	
public 
void 
Dispose 
( 
) 
{ 	

Connection 
. 
Dispose 
( 
)  
;  !
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
} 
} ÛX
UD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\HistoryQuery.cs
	namespace 	
GameHistoryAPI
 
. 
Models 
{		 
public

 

class

 
HistoryQuery

 
:

 
IHistoryQuery

  -
{ 
public 
AppDb 
Db 
{ 
get 
; 
}  
public 
SqlStatement 
	Statement %
{& '
get( +
;+ ,
}- .
public 
HistoryQuery 
( 
string "
connectionString# 3
)3 4
{ 	
Db 
= 
new 
AppDb 
( 
connectionString +
)+ ,
;, -
	Statement 
= 
new 
SqlStatement (
(( )
)) *
;* +
} 	
public 
async 
Task 
< 
Game 
> 
InsertAsync  +
(+ ,
Game, 0
game1 5
)5 6
{ 	
await 
Db 
. 

Connection 
.  
	OpenAsync  )
() *
)* +
;+ ,
using 
var 
cmd 
= 
Db 
. 

Connection )
.) *
CreateCommand* 7
(7 8
)8 9
;9 :
cmd 
. 
CommandText 
= 
	Statement '
.' (
InsertAsync( 3
;3 4

BindParams 
( 
cmd 
, 
game  
.  !
Author! '
,' (
game) -
.- .
InitialState. :
): ;
;; <
await 
cmd 
.  
ExecuteNonQueryAsync *
(* +
)+ ,
;, -
game 
. 
Id 
= 
( 
int 
) 
cmd 
. 
LastInsertedId -
;- .
return 
game 
; 
}   	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" 
Game"" #
>""# $
>""$ %
AllAsync""& .
("". /
)""/ 0
{## 	
await$$ 
Db$$ 
.$$ 

Connection$$ 
.$$  
	OpenAsync$$  )
($$) *
)$$* +
;$$+ ,
using%% 
var%% 
cmd%% 
=%% 
Db%% 
.%% 

Connection%% )
.%%) *
CreateCommand%%* 7
(%%7 8
)%%8 9
;%%9 :
cmd&& 
.&& 
CommandText&& 
=&& 
	Statement&& '
.&&' (
AllAsync&&( 0
;&&0 1
return(( 
await(( 
ReadAllAsync(( %
(((% &
await((& +
cmd((, /
.((/ 0
ExecuteReaderAsync((0 B
(((B C
)((C D
)((D E
;((E F
})) 	
public++ 
async++ 
Task++ 
<++ 
Game++ 
>++ 
UpdateAsync++  +
(+++ ,
int++, /
id++0 2
,++2 3
Game++4 8
game++9 =
)++= >
{,, 	
await-- 
Db-- 
.-- 

Connection-- 
.--  
	OpenAsync--  )
(--) *
)--* +
;--+ ,
using.. 
var.. 
cmd.. 
=.. 
Db.. 
... 

Connection.. )
...) *
CreateCommand..* 7
(..7 8
)..8 9
;..9 :
cmd// 
.// 
CommandText// 
=// 
	Statement// '
.//' (
UpdateAsync//( 3
;//3 4

BindParams00 
(00 
cmd00 
,00 
game00  
.00  !
InitialState00! -
)00- .
;00. /
BindId11 
(11 
cmd11 
,11 
id11 
)11 
;11 
var22 
result22 
=22 
await22 
ReadAllAsync22 +
(22+ ,
await22, 1
cmd222 5
.225 6
ExecuteReaderAsync226 H
(22H I
)22I J
)22J K
;22K L
return44 
result44 
.44 
Count44 
>44  !
$num44" #
?44$ %
result44& ,
[44, -
$num44- .
]44. /
:440 1
null442 6
;446 7
}55 	
public77 
async77 
Task77 
<77 
Game77 
>77 
DeleteAsync77  +
(77+ ,
int77, /
id770 2
)772 3
{88 	
var99 
body99 
=99 
await99 
FindOneAsync99 )
(99) *
id99* ,
)99, -
;99- .
using:: 
var:: 
cmd:: 
=:: 
Db:: 
.:: 

Connection:: )
.::) *
CreateCommand::* 7
(::7 8
)::8 9
;::9 :
cmd;; 
.;; 
CommandText;; 
=;; 
	Statement;; '
.;;' (
DeleteAsync;;( 3
;;;3 4
BindId<< 
(<< 
cmd<< 
,<< 
id<< 
)<< 
;<< 
await== 
cmd== 
.==  
ExecuteNonQueryAsync== *
(==* +
)==+ ,
;==, -
return?? 
body?? 
;?? 
}@@ 	
publicBB 
asyncBB 
TaskBB 
<BB 
GameBB 
>BB 
FindOneAsyncBB  ,
(BB, -
intBB- 0
idBB1 3
)BB3 4
{CC 	
awaitDD 
DbDD 
.DD 

ConnectionDD 
.DD  
	OpenAsyncDD  )
(DD) *
)DD* +
;DD+ ,
usingEE 
varEE 
cmdEE 
=EE 
DbEE 
.EE 

ConnectionEE )
.EE) *
CreateCommandEE* 7
(EE7 8
)EE8 9
;EE9 :
cmdFF 
.FF 
CommandTextFF 
=FF 
	StatementFF '
.FF' (
FindOneAsyncFF( 4
;FF4 5
BindIdGG 
(GG 
cmdGG 
,GG 
idGG 
)GG 
;GG 
varHH 
resultHH 
=HH 
awaitHH 
ReadAllAsyncHH +
(HH+ ,
awaitHH, 1
cmdHH2 5
.HH5 6
ExecuteReaderAsyncHH6 H
(HHH I
)HHI J
)HHJ K
;HHK L
returnJJ 
resultJJ 
.JJ 
CountJJ 
>JJ  !
$numJJ" #
?JJ$ %
resultJJ& ,
[JJ, -
$numJJ- .
]JJ. /
:JJ0 1
nullJJ2 6
;JJ6 7
}KK 	
privateMM 
asyncMM 
TaskMM 
<MM 
ListMM 
<MM  
GameMM  $
>MM$ %
>MM% &
ReadAllAsyncMM' 3
(MM3 4
DbDataReaderMM4 @
readerMMA G
)MMG H
{NN 	
varOO 
gamesOO 
=OO 
newOO 
ListOO  
<OO  !
GameOO! %
>OO% &
(OO& '
)OO' (
;OO( )
usingPP 
(PP 
readerPP 
)PP 
{QQ 
whileRR 
(RR 
awaitRR 
readerRR #
.RR# $
	ReadAsyncRR$ -
(RR- .
)RR. /
)RR/ 0
{SS 
varTT 
gameTT 
=TT 
newTT "
GameTT# '
(TT' (
)TT( )
{UU 
IdVV 
=VV 
readerVV #
.VV# $
GetInt32VV$ ,
(VV, -
$numVV- .
)VV. /
,VV/ 0
AuthorWW 
=WW  
readerWW! '
.WW' (
	GetStringWW( 1
(WW1 2
$numWW2 3
)WW3 4
,WW4 5
InitialStateXX $
=XX% &
readerXX' -
.XX- .
	GetStringXX. 7
(XX7 8
$numXX8 9
)XX9 :
,XX: ;
}YY 
;YY 
gamesZZ 
.ZZ 
AddZZ 
(ZZ 
gameZZ "
)ZZ" #
;ZZ# $
}[[ 
}\\ 
return]] 
games]] 
;]] 
}^^ 	
private`` 
void`` 
BindId`` 
(`` 
MySqlCommand`` (
cmd``) ,
,``, -
int``. 1
id``2 4
)``4 5
{aa 	
cmdbb 
.bb 

Parametersbb 
.bb 
Addbb 
(bb 
newbb "
MySqlParameterbb# 1
{cc 
ParameterNamedd 
=dd 
$strdd  %
,dd% &
DbTypeee 
=ee 
DbTypeee 
.ee  
Int32ee  %
,ee% &
Valueff 
=ff 
idff 
,ff 
}gg 
)gg 
;gg 
}hh 	
privatejj 
voidjj 

BindParamsjj 
(jj  
MySqlCommandjj  ,
cmdjj- 0
,jj0 1
stringjj2 8
authorjj9 ?
,jj? @
stringjjA G
initialStatejjH T
)jjT U
{kk 	
cmdll 
.ll 

Parametersll 
.ll 
Addll 
(ll 
newll "
MySqlParameterll# 1
{mm 
ParameterNamenn 
=nn 
$strnn  )
,nn) *
DbTypeoo 
=oo 
DbTypeoo 
.oo  
Stringoo  &
,oo& '
Valuepp 
=pp 
authorpp 
,pp 
}qq 
)qq 
;qq 
cmdrr 
.rr 

Parametersrr 
.rr 
Addrr 
(rr 
newrr "
MySqlParameterrr# 1
{ss 
ParameterNamett 
=tt 
$strtt  /
,tt/ 0
DbTypeuu 
=uu 
DbTypeuu 
.uu  
Stringuu  &
,uu& '
Valuevv 
=vv 
initialStatevv $
,vv$ %
}ww 
)ww 
;ww 
}xx 	
privatezz 
voidzz 

BindParamszz 
(zz  
MySqlCommandzz  ,
cmdzz- 0
,zz0 1
stringzz2 8
initialStatezz9 E
)zzE F
{{{ 	
cmd|| 
.|| 

Parameters|| 
.|| 
Add|| 
(|| 
new|| "
MySqlParameter||# 1
{}} 
ParameterName~~ 
=~~ 
$str~~  /
,~~/ 0
DbType 
= 
DbType 
.  
String  &
,& '
Value
ÄÄ 
=
ÄÄ 
initialState
ÄÄ $
,
ÄÄ$ %
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
}ÑÑ ¬	
VD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\IHistoryQuery.cs
	namespace 	
GameHistoryAPI
 
. 
Infrastructure '
{ 
public 

	interface 
IHistoryQuery "
{ 
Task		 
<		 
Game		 
>		 
InsertAsync		 
(		 
Game		 #
game		$ (
)		( )
;		) *
Task 
< 
Game 
> 
UpdateAsync 
( 
int "
id# %
,% &
Game' +
game, 0
)0 1
;1 2
Task 
< 
Game 
> 
DeleteAsync 
( 
int "
id# %
)% &
;& '
Task 
< 
Game 
> 
FindOneAsync 
(  
int  #
id$ &
)& '
;' (
Task 
< 
List 
< 
Game 
> 
> 
AllAsync !
(! "
)" #
;# $
} 
} ˙

UD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Infrastructure\SqlStatement.cs
	namespace 	
GameHistoryAPI
 
. 
Infrastructure '
{ 
public 

class 
SqlStatement 
{ 
public 
string 
InsertAsync !
{" #
get$ '
;' (
}) *
public 
string 
UpdateAsync !
{" #
get$ '
;' (
}) *
public		 
string		 
DeleteAsync		 !
{		" #
get		$ '
;		' (
}		) *
public 
string 
FindOneAsync "
{# $
get% (
;( )
}* +
public 
string 
AllAsync 
{  
get! $
;$ %
}& '
public 
SqlStatement 
( 
) 
{ 	
InsertAsync 
= 
$str t
;t u
UpdateAsync 
= 
$str m
;m n
DeleteAsync 
= 
$str N
;N O
FindOneAsync 
= 
$str P
;P Q
AllAsync 
= 
$str 6
;6 7
} 	
} 
} ª
ED:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Models\Game.cs
	namespace 	
GameHistoryAPI
 
. 
Models 
{ 
public 

class 
Game 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Author 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
InitialState		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public 
Game 
( 
) 
{ 	
} 	
} 
} Ö
AD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Program.cs
	namespace 	
GameHistoryAPI
 
{ 
public 

class 
Program 
{ 
	protected 
Program 
( 
) 
{		 	
} 	
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ó
AD:\School\GameOfLifeAPIs\GameHistoryAPI\GameHistoryAPI\Startup.cs
	namespace		 	
GameHistoryAPI		
 
{

 
public 

class 
Startup 
{ 
readonly 
string "
MyAllowSpecificOrigins .
=/ 0
$str1 J
;J K
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddCors 
( 
options $
=>% '
{ 
options 
. 
	AddPolicy !
(! "
name" &
:& '"
MyAllowSpecificOrigins( >
,> ?
builder" )
=>* ,
{" #
builder& -
.- .
WithOrigins. 9
(9 :
$str: Q
)Q R
;R S
}" #
)# $
;$ %
}   
)   
;   
services!! 
.!! 
AddControllers!! #
(!!# $
)!!$ %
;!!% &
services"" 
."" 
AddTransient"" !
<""! "
IHistoryQuery""" /
,""/ 0
HistoryQuery""1 =
>""= >
(""> ?
_""? @
=>""A C
new""D G
HistoryQuery""H T
(""T U
Configuration""U b
[""b c
$str	""c à
]
""à â
)
""â ä
)
""ä ã
;
""ã å
}## 	
public&& 
void&& 
	Configure&& 
(&& 
IApplicationBuilder&& 1
app&&2 5
,&&5 6
IWebHostEnvironment&&7 J
env&&K N
)&&N O
{'' 	
if(( 
((( 
env(( 
.(( 
IsDevelopment(( !
(((! "
)((" #
)((# $
{)) 
app** 
.** %
UseDeveloperExceptionPage** -
(**- .
)**. /
;**/ 0
}++ 
app-- 
.-- 
UseHttpsRedirection-- #
(--# $
)--$ %
;--% &
app// 
.// 

UseRouting// 
(// 
)// 
;// 
app11 
.11 
UseCors11 
(11 "
MyAllowSpecificOrigins11 .
)11. /
;11/ 0
app33 
.33 
UseAuthorization33  
(33  !
)33! "
;33" #
app55 
.55 
UseEndpoints55 
(55 
	endpoints55 &
=>55' )
{66 
	endpoints77 
.77 
MapControllers77 (
(77( )
)77) *
;77* +
}88 
)88 
;88 
}99 	
}:: 
};; 